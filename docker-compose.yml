services:
  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: analyti_core_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  python-service:
    build: 
      context: ./python-service
      dockerfile: Dockerfile
    container_name: python-service
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - ./python-service/.env
    volumes:
      - ./python-service:/app
    depends_on:
      db:
        condition: service_healthy

  java-service:
      build:
        context: ./java-service
      container_name: java-service
      restart: always
      ports:
        - "8080:8080"
      env_file:
        - ./java-service/.env
      depends_on:
        db:
          condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - python-service
      - java-service

volumes:
  postgres_data: